name: configure_vm

trigger:
- none

parameters:
- name: environment
  displayName: 'Ansible host section'
  type: string
  default: "local_test" 
  values:
    - local_test
    - local_containers
    - remote_test
- name: playbook
  displayName: 'Ansible playbook'
  type: string
  default: "configure_vm" 
  values:
    - configure_vm
- name: acn
  displayName: 'Ansible cantral node name'
  type: string
  default: "tmp-ubuntu.acn" 

variables:
- name: environment
  value: ${{ parameters.environment }}

stages:
- stage:
  displayName: 'Configure vm'
  pool:
    name: Default
  jobs:
  - deployment: configure_vm
    displayName: 'configure vm'
    environment: ${{ parameters.acn }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              clean: true
              path: repo 
              continueOnError: false
            - task: CopyFiles@2
              inputs:
                SourceFolder: '$(Pipeline.Workspace)/repo/ansible'
                Contents: '**'
                TargetFolder: '/home/ansible'
                CleanTargetFolder: true
              continueOnError: false
            - task: Bash@3
              displayName: 'add ansible hosts'
              inputs:
                targetType: 'inline'
                script: |
                  cp $(Pipeline.Workspace)/repo/${{ parameters.environment }} /etc/ansible/hosts
              continueOnError: false
            - task: Bash@3
              displayName: 'check ansible inventory'
              inputs:
                targetType: 'inline'
                script: |
                  ansible-inventory --list -y
                  ansible all -m ping
              continueOnError: false
            - task: Bash@3
              displayName: 'run playbook'
              inputs:
                targetType: 'inline'
                script: |
                  ansible-playbook /home/ansible/${{ parameters.playbook }}.yml
              continueOnError: false

