name: configure_vm

trigger:
- none

parameters:
- name: environment
  displayName: 'Ansible host section'
  type: string
  default: "non_disruptive" 
  values:
    - non_disruptive
- name: playbook
  displayName: 'Ansible playbook'
  type: string
  default: "configure_vm" 
  values:
    - configure_vm
- name: dry_run
  displayName: Dry run
  type: boolean
  default: false


stages:
- stage:
  displayName: Run ansible
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: dry_run
    displayName: Dry run ansible
    condition: eq(${{ parameters.dry_run }}, true)
    dependsOn: []
    steps:
      - checkout: self
        clean: true
        path: repo
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Pipeline.Workspace)/repo/is_master_ahead.py'
      # On MS agent ansible is installed
      # - template: templates/install_ansible.yml
      ## comment #1
      #- template: templates/push_priv_key.yml
      # - task: Bash@3
      #   displayName: 'Manuall connection'
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       ssh -o "StrictHostKeyChecking=no" ansible@srv16.mikr.us -p 10234 "whoami; hostname"
      ## /comment #1
  ## comment #2
  # - deployment: run
  #   displayName: Run ansible
  #   dependsOn: []
  #   environment: ${{ parameters.environment }}
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #           - checkout: self
  #             clean: true
  #             path: repo
  #           - task: Bash@3
  #             displayName: Prepare ansible
  #             inputs:
  #               targetType: 'inline'
  #               script: |
  #                 cp $(Pipeline.Workspace)/repo/ansible/ansible.cfg /etc/ansible/ansible.cfg
  #                 cp $(Pipeline.Workspace)/repo/ansible/inventory/hosts /etc/ansible/hosts
  #             continueOnError: false
  #           - task: Bash@3
  #             displayName: 'check ansible inventory'
  #             inputs:
  #               targetType: 'inline'
  #               script: |
  #                 ansible-inventory --list -y
  #                 ansible all -m ping
  ## /comment #2

#NOT RUN YET
#             continueOnError: false
#           - task: Bash@3
#             displayName: 'run playbook'
#             inputs:
#               targetType: 'inline'
#               script: |
#                 ansible-playbook /home/ansible/${{ parameters.playbook }}.yml
#             continueOnError: false

