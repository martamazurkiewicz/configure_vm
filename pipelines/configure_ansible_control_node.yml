# Pipeline for configuring ansible central node and publishing public key as artifact
name: configure_acn

trigger:
- none

parameters:
- name: environment
  displayName: 'Host name'
  type: string
  default: "tmp-ubuntu.acn" 

stages:
- stage:
  displayName: 'Configure control node'
  pool:
    name: Default
  jobs:
  - deployment: configure_vm
    displayName: 'configure vm'
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            displayName: 'check if python is installed'
            inputs:
              targetType: 'inline'
              script: |
                python3 -m pip -V
            condition: always()
          - task: Bash@3
            displayName: 'install pip'
            inputs:
              targetType: 'inline'
              script: |
                curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                python3 get-pip.py --user
            condition: failed()
          - task: Bash@3
            displayName: 'check if ansible is installed'
            inputs:
              targetType: 'inline'
              script: |
                . ~/.profile && ansible --version
            condition: always()
          - task: Bash@3
            displayName: 'install ansible'
            inputs:
              targetType: 'inline'
              script: |
                python3 -m pip install --user ansible
                . ~/.profile && ansible --version
            condition: failed()
          - task: DownloadSecureFile@1
            name: ansibleprivkey
            displayName: 'Download Ansible private key'
            inputs:
              secureFile: 'ansible_priv_key'
            condition: always()
          - task: Bash@3
            displayName: 'copy Ansible private key'
            inputs:
              targetType: 'inline'
              script: |
                echo "$(ansibleprivkey.secureFilePath)": $(ansibleprivkey.secureFilePath)
                mv $(ansibleprivkey.secureFilePath) ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
            condition: always()
